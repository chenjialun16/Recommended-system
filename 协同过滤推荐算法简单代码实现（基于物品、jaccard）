#!/usr/bin/env python
# coding: utf-8

# In[1]:


#协同过滤推荐算法简单代码实现（基于物品、jaccard）


# In[2]:


import numpy as np
import pandas as pd
from pprint import pprint


# In[3]:


#构建用户购买记录数据集（1买了，0没买）
users = ["User1","User2","User3","User4","User5",]
items = ["ItemA","ItemB","ItemC","ItemD","ItemE"]
datasets = [
    [1,0,1,1,0],
    [1,0,0,1,1],
    [1,0,1,0,0],
    [0,1,0,1,1],
    [1,1,1,0,1],
]
df = pd.DataFrame(datasets,columns=items,index=users)
print(df)
print(df.index)
print(df.columns)


# In[6]:


from sklearn.metrics.pairwise import pairwise_distances
# 计算物品间相似度(相似度 = 1-杰卡德距离) 默认是行
item_similar = 1 - pairwise_distances(df.T.values,metric='jaccard')
item_similar = pd.DataFrame(item_similar,columns=items,index=items)
print("物品之间的相似度")
item_similar


# In[7]:


topN_items = {}
for i in item_similar.columns:
    _df = item_similar.loc[i].drop(i)
    _df_sorted = _df.sort_values(ascending = False)
    top2 = list(_df_sorted.index[:2])
    topN_items[i] = top2
    
print("每个商品最相似的两个商品")
pprint(topN_items)  


# In[12]:


rs_items = {}
for user in df.index:#遍历所有用户
    rs_item = set()
    for item in df.loc[user].replace(0,np.nan).dropna().index:#取出每个用户购买物品
        rs_item = rs_item.union(set(topN_items[item]))#每个物品找出最相似的物品，给用户推荐
    rs_item -= set(df.loc[user].replace(0,np.nan).dropna().index)#删去用户自己购买的
    rs_items[user] = rs_item

print("基于物品的推荐")
rs_items

